services:

  rabbitmq:
    image: 'rabbitmq:3-management'
    container_name: rabbitmq-container
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    image: ${DOCKERHUB_USERNAME}/oneshot:latest
    container_name: oneshot-app
    #    restart: always
    environment:
      #
      SPRING_PROFILES_ACTIVE: prod
      # 확인!!
#      SPRING_JPA_HIBERNATE_DDL-AUTO: create
      #
      PAYMENT_SECRETKEY: ${PAYMENT_SECRET_KEY}
      #
      # ////////////////
      # //    Prod    //
      # ////////////////
      #
      # SQL
      SPRING_DATASOURCE_URL: jdbc:mysql://${RDS_ENDPOINT}:3306/oneshot
      SPRING_DATASOURCE_USERNAME: ${RDS_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${RDS_PASSWORD}
      # Redis
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      SPRING_DATA_REDIS_PORT: 6379
      # ElasticSearch
      ELASTICSEARCH_HOST: ${OPENSEARCH_HOST}
      ELASTICSEARCH_PORT: 443
      ELASTICSEARCH_USERNAME: ${OPENSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD}
      # S3
      CLOUD_AWS_CREDENTIALS_ACCESSKEY: ${AWS_ACCESS_KEY}
      CLOUD_AWS_CREDENTIALS_SECRETKEY: ${AWS_SECRET_KEY}
      CLOUD_AWS_S3_BUCKETNAME: oneshot-bucket2
      # RabbitMQ
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE_EVENT: ${RABBITMQ_QUEUE_EVENT}
      #
      # ////////////////
      # //  Security  //
      # ////////////////
      #
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      #
      SUPER_USERNAME: ${SUPER_USERNAME}
      SUPER_NICKNAME: ${SUPER_NICKNAME}
      SUPER_PASSWORD: ${SUPER_PASSWORD}
      #
      # NAVER
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_ID: ${OAUTH2_NAVER_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_SECRET: ${OAUTH2_NAVER_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_REDIRECT_URI: "{baseUrl}/login/oauth2/code/naver"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_AUTHORIZATION_GRANT_TYPE: authorization_code
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_NAME: Naver
      #
      # GOOGLE
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${OAUTH2_GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${OAUTH2_GOOGLE_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: "{baseUrl}/login/oauth2/code/google"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_AUTHORIZATION_GRANT_TYPE: authorization_code
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE: profile
      #
      # NAVER Provider
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_NAVER_AUTHORIZATION_URI: https://nid.naver.com/oauth2.0/authorize
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_NAVER_TOKEN_URI: https://nid.naver.com/oauth2.0/token
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_NAVER_USER_INFO_URI: https://openapi.naver.com/v1/nid/me
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_NAVER_USER_NAME_ATTRIBUTE: response
    ports:
      - "8080:8080"

volumes:
  rabbitmq_data: